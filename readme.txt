项目设立：模仿哔哩哔哩网站进行项目设计

测试用账号：admin111  密码：admin111

数据库连接：暂时使用的centos中的MYSQL数据库，数据库名称为abaaba，密码：111111 连接地址：192.168.0.50

数据库设计（即models.py）暂定，有时间一起讨论

涉及到的优化方案：
	1. 模板继承，具体继承方式在由完成了页面设计后讨论
	2. 异步发送邮件，已激活账号，并且通过邮件修改密码
	3. 首页采用页面缓存方式进行优化
	其它暂定



项目中使用到的特效：
    1. 轮播图-首页大图
    2. 选项卡切换-
    3. 弹窗特效-主要是页面的头部位置
    其它暂定


==================数据库的设计与实现=========================
        1. 用户数据库（ps：在学习了订单支付模块后 可考虑加入会员属性，设置会员观看，非会员前面有广告，这个功能可根据项目的难易程度酌情考虑）
        2. 动漫的数据库（数据库的设计再讨论）
        3. 浏览记录 （在用户关掉网页后应将浏览记录记录到MYSQL中，下次登录应有上次的浏览记录，可酌情考虑是否添加）



===================注册app==============
    1.user models.py
                Address


================修改密码=============
	
================首页================

    ======登录页========
	1.用户名
	2.密码
    ======注册页========
	1.用户名
	2.密码
	3.确认密码
	4.手机号
	5.邮件

    ======首页内容=====
	1.全局搜索=====
	2.分类=======
	3.
================个人信息=============
	1.个人资料
	2.浏览记录
	3.
================详情页==============
	1.分类显示
	2.根据啥东西排序


项目涉及到的具体环境：
    在项目根目录下的requirements.txt文件中


项目涉及到的代码编辑器：
    1. pycharm



用户模块
    1. 注册页
        （1） 注册时校验用户名是否被注册
        （2） 完成用户信息的注册
        （3） 给用户的注册邮箱发送邮件，用户点击邮件中的激活链接完成用户帐户的激活
                王彦俊:我使用的redis拥有密码，所以设置需要更改一下,使用的是redis中的4号数据库

    2. 登录页
        （1） 实现用户的登录功能


    3. 用户中心
        （1） 用户中心信息页-显示登录用户的信息：包括用户名、邮箱、修改用户年龄、出生日期、星座
        （2） 用户中心最近浏览页-显示用户最近浏览的电影信息
    4. 会员制
        （1） 在django的认证系统user中，is_staff字段表示的是员工，默认是false即0，但我们的打算是指定为是否为vip会员，如果是则为1,
        （2） 加入部分会员级别的电视、电影，非会员只能观看前15秒，之后的内容不允许观看


电影相关
    1. 首页
    2. 列表页
    3. 电影详情页
    4. 电影或电视播放页



数据库设计 ：
    电影种类：MovieType
                字段：电影种类、电影标识、电影


                先来录入电影-> 电影类型 -> 再来每种类型的电影下添加电影视频
                录入电视剧 -> 电视剧类型 -> 电视剧下每款电视剧
                动漫
                沙雕视频 - >


分类页只留一个，内容循环显示： comedy      genres  horror  series


后续需要进行的任务：
    1. 实现视频上传
    2. 实现各个html页面之间的跳转
    3. 各页面完成模板继承
    4. 前端页面填充数据库中的内容
    5. 开通会员机制：做充值页面和充值功能，充值完成后更改用户信息，在user表中，is_staff字段默认是false即0，如果用户充值完成后则更改为1。记录充值时间，设置一定时长后改为0
